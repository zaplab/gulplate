{
    "asi"       : false,// This option suppresses warnings about missing semicolons. There is a lot of FUD about semicolon spread by quite a few people in the community. (http://www.jshint.com/docs/options/#asi)
    "boss"      : true, // This option suppresses warnings about the use of assignments in cases where comparisons are expected. More often than not, code like if (a = 10) {} is a typo. (http://www.jshint.com/docs/options/#boss)
    "browser"   : true, // This option defines globals exposed by modern browsers: all the way from good old document and navigator to the HTML5 FileReader and other new developments in the browser world. (http://www.jshint.com/docs/options/#browser)
    "curly"     : true, // This option requires you to always put curly braces around blocks in loops and conditionals. (http://www.jshint.com/docs/options/#curly)
    "devel"     : true, // This option defines globals that are usually used for logging poor-man's debugging: console, alert, etc. (http://www.jshint.com/docs/options/#devel)
    "eqeqeq"    : false,// This options prohibits the use of == and != in favor of === and !== (http://www.jshint.com/docs/options/#eqeqeq)
    "eqnull"    : true, // This option suppresses warnings about == null comparisons. (http://www.jshint.com/docs/options/#eqnull)
    "expr"      : true, // This option suppresses warnings about the use of expressions where normally you would expect to see assignments or function calls. (http://www.jshint.com/docs/options/#expr)
    "immed"     : false,// This option prohibits the use of immediate function invocations without wrapping them in parentheses. (http://www.jshint.com/docs/options/#immed)
    "laxbreak"  : true, // This option suppresses most of the warnings about possibly unsafe line breakings in your code. It doesn't suppress warnings about comma-first coding style. (http://www.jshint.com/docs/options/#laxbreak)
    "laxcomma"  : false,// This option suppresses warnings about comma-first coding style. (http://www.jshint.com/docs/options/#laxcomma)
    "validthis" : false,// This option suppresses warnings about possible strict violations when the code is running in strict mode and you use this in a non-constructor function. (http://www.jshint.com/docs/options/#validthis)
    "latedef"   : true, // This option prohibits the use of a variable before it was defined. (http://www.jshint.com/docs/options/#latedef)
    "newcap"    : true, // This option requires you to capitalize names of constructor functions. (http://www.jshint.com/docs/options/#newcap)
    "noarg"     : true, // This option prohibits the use of arguments.caller and arguments.callee. (http://www.jshint.com/docs/options/#noarg)
    "sub"       : true, // This option suppresses warnings about using [] notation when it can be expressed in dot notation: person['name'] vs. person.name. (http://www.jshint.com/docs/options/#sub)
    "undef"     : true, // This option prohibits the use of explicitly undeclared variables. (http://www.jshint.com/docs/options/#undef)
    "node"      : true, // This option defines globals available when your code is running inside of the Node runtime environment. (http://www.jshint.com/docs/options/#node)
    "predef": [
        // lodash / underscorejs / jQuery / Zepto
        "_", "jQuery", "Zepto",

        // requirejs
        "define", "require"
    ]
}
